buildscript{
    repositories{
        mavenLocal()
        mavenCentral()
        google()
        maven{ url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    dependencies{
        classpath 'com.android.tools.build:gradle:7.1.0-alpha02'
    }
}

apply plugin: "com.android.application"

configurations{ natives }

repositories{
    mavenCentral()
    maven{ url "https://maven.google.com" }
    jcenter() //remove later once google/JetBrains fixes the dependency
}

task deploy(type: Copy){
    dependsOn "assembleRelease"

    from "build/outputs/apk/standard/release/android-standard-release.apk"
    into "../deploy/"
    rename("android-standard-release.apk", "${generateDeployName('android')}.apk")
}

android{
    buildToolsVersion '30.0.2'
    compileSdkVersion 30
    sourceSets{
        main{
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets', 'src/main/assets', '../core/assets/']
            jniLibs.srcDirs = ['libs']
        }
        gp{
            java.srcDirs = ['srcgp']
        }

        androidTest.setRoot('tests')
    }

    packagingOptions{
        exclude 'META-INF/robovm/ios/robovm.xml'
    }

    defaultConfig{
        Properties props = loadVersionProps()
        Integer vcode = props['androidBuildCode']?.toInteger() ?: 1
        def versionNameResult = "$versionNumber-$versionType-${getBuildVersion().replace(" ", "-")}"

        applicationId "io.anuke.mindustry"
        minSdkVersion 14
        targetSdkVersion 30
        
        versionName versionNameResult
        versionCode = (System.getenv("TRAVIS_BUILD_ID") != null ? System.getenv("TRAVIS_BUILD_ID").toInteger() : vcode)

        if(project.hasProperty("release")){
            props['androidBuildCode'] = (vcode + 1).toString()
        }
        props.store(file('../core/assets/version.properties').newWriter(), null)
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "google"

    signingConfigs{
        release{
            if(project.hasProperty("RELEASE_STORE_FILE")){
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }else if(System.getenv("CI") == "true"){
                storeFile = file("../../bekeystore.jks")
                storePassword = System.getenv("keystore_password")
                keyAlias = System.getenv("keystore_alias")
                keyPassword = System.getenv("keystore_alias_password")
            }else{
                println("No keystore property found. Releases will be unsigned.")
            }
        }
    }

    buildTypes{
        all{
            minifyEnabled = true
            shrinkResources = true
            //this is the ONLY WAY I could find to force r8 to keep its filthy hands off of my default interfaces.
            //may have undesirable side effects
            debuggable = true
            proguardFiles("proguard-rules.pro")
        }
    }

    if(project.hasProperty("RELEASE_STORE_FILE") || System.getenv("CI") == "true"){
        buildTypes{
            release{
                signingConfig signingConfigs.release
            }
        }
    }

    // Specifies one flavor dimension.
    flavorDimensions "version"
    productFlavors{
        standard{

        }
        gp{
            applicationIdSuffix ".gp"
            versionNameSuffix "-gp"
        }
    }
}

dependencies{
    implementation project(":core")

    implementation arcModule("backends:backend-android")
    implementation 'com.jakewharton.android.repackaged:dalvik-dx:9.0.0_r3'

    natives "com.github.Anuken.Arc:natives-android:${getArcHash()}"
    natives "com.github.Anuken.Arc:natives-freetype-android:${getArcHash()}"

    gpImplementation "com.google.android.gms:play-services-games:21.0.0"
    gpImplementation "com.google.android.gms:play-services-auth:19.0.0"

    //android dependencies magically disappear during compilation, thanks gradle!
    def sdkFile = new File((String)findSdkDir(), "/platforms/android-29/android.jar")
    if(sdkFile.exists()) compileOnly files(sdkFile.absolutePath)
}

task copyAndroidNatives(){
    configurations.natives.files.each{ jar ->
        copy{
            from zipTree(jar)
            into file("libs/")
            include "**"
        }
    }
}

task run(type: Exec){
    commandLine "${findSdkDir()}/platform-tools/adb", 'shell', 'am', 'start', '-n', 'io.anuke.mindustry/mindustry.android.AndroidLauncher'
}

if(!project.ext.hasSprites()){
    tasks.whenTaskAdded{ task ->
        if(task.name == 'assembleDebug' || task.name == 'assembleRelease'){
            task.dependsOn ":tools:pack"
        }
    }
}
